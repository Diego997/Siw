# ===============================
# = DATABASE CONFIGURATION
# ===============================

# JDBC driver
spring.datasource.driver-class-name=org.postgresql.Driver
# DB url
spring.datasource.url=jdbc:postgresql://localhost:5432/silph
# DB user
spring.datasource.username=postgres
# DB password
spring.datasource.password=postgres

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
# Use this

spring.datasource.validationQuery = SELECT 1

server.error.whitelabel.enabled=false


# ===============================
# = JPA / HIBERNATE
# ===============================

# SQL dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Do not log or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (none, validate, create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# IMPORTANT: this allows to load lazily handled contents from the DB from any point of code
# (so not only in transactions, and not only in the persistence layer).
# It is a controversial choice (many people say it is an anti-pattern).
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# add this to avoid exception "Method «org.postgresql.jdbc.PgConnection.createClob()» not implemented yet"
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
